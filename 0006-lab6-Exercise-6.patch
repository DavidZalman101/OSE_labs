From 355b796106c0caf221cf9a708dd3a854d7c3b1e0 Mon Sep 17 00:00:00 2001
From: DavidZalman101 <davidzalman.101@gmail.com>
Date: Thu, 26 Jun 2025 19:24:36 +0300
Subject: [PATCH 06/12] lab6 - Exercise 6.

---
 kern/e1000.c | 49 +++++++++++++++++++++++++++++++++++++++++--------
 kern/e1000.h | 36 ++++++++++++++++++++++++++++++++----
 2 files changed, 73 insertions(+), 12 deletions(-)

diff --git a/kern/e1000.c b/kern/e1000.c
index e35bf0f..86afe9f 100644
--- a/kern/e1000.c
+++ b/kern/e1000.c
@@ -28,6 +28,10 @@ e1000_attach(struct pci_func *pcif)
 	// Transmit Initialization
 	transmit_init();
 
+	// test - Transmit Packet
+	char *hello_str_packet = "hello";
+	transmit_packet((uint8_t*)hello_str_packet, 6);
+
 	return 0;
 }
 
@@ -50,29 +54,58 @@ transmit_init(void)
 	memset(tx_bufs, 0, sizeof(tx_bufs));
 	assert((PADDR((void*) tx_queue) & 0xF) == 0x0); // 16-bytes aligned
 
-	for (i = 0; i < NTDX; i++)
-		tx_queue[i].buf_addr = PADDR(&tx_bufs[i]);
+	for (i = 0; i < NTDX; i++) {
+		memset(tx_bufs[i], 0, TDX_BUF_SIZE);
+		tx_queue[i].buf_addr = PADDR(tx_bufs[i]);
+	}
 
 	// base init
 	E1000_REG(E1000_TDBAL) = PADDR((void*)tx_queue);
-	E1000_REG(E1000_TDBAH) = 0x0;
+	E1000_REG(E1000_TDBAH) = 0;
 
 	// len init
 	assert((sizeof(tx_queue) & 0x7F) == 0); // 128-byte aligned
-	E1000_REG(E1000_TDBAH) = sizeof(tx_queue);
+	E1000_REG(E1000_TDLEN) = sizeof(tx_queue);
 
 	// head & tail init
 	E1000_REG(E1000_TDH) = 0x0;
 	E1000_REG(E1000_TDT) = 0x0;
 
 	// control init
-	E1000_REG(E1000_TCTL) = 0x0;
+	E1000_REG(E1000_TCTL) &= ~(E1000_TCTL_CT | E1000_TCTL_COLD);
 	E1000_REG(E1000_TCTL) |= (E1000_TCTL_EN)    |
 							 (E1000_TCTL_PSP)   |
 							 (0x10 << E1000_TCTL_CT_SHIFT) |
-							 (0x40 & E1000_TCTL_COLD_SHIFT);
+							 (0x40 << E1000_TCTL_COLD_SHIFT);
 
 	// Inter packet gap init
-	E1000_REG(E1000_TIPG) = 0xa;
-	E1000_REG(E1000_TIPG) = (0x8 << 10) | (0x6 << 20);
+	E1000_REG(E1000_TIPG) &= ~(E1000_TIPG_IPGT_MASK | E1000_TIPG_IPGR1_MASK |
+							   E1000_TIPG_IPGR2_MASK);
+	E1000_REG(E1000_TIPG) = (0xa) | (0x4 << 10) | (0x6 << 20);
+}
+
+static int
+transmit_packet(uint8_t *buf, uint32_t buf_len)
+{
+	cprintf("entered transmit_packet\n");
+	if (!buf)
+		return -E1000_ERR_IVALID_ARG;
+
+	if (buf_len > TDX_BUF_SIZE)
+		return -E1000_ERR_TX_PKT_TOO_BIG;
+
+	int tail_idx = E1000_REG(E1000_TDT);	
+	if ((tx_queue[tail_idx].cmd & (1 << E1000_TX_CMD_RS_SHIFT)) &&
+		!(tx_queue[tail_idx].status & (1 << E1000_TX_STAT_DD_SHIFT)))
+		return -E1000_ERR_TX_QUEUE_FULL;
+
+	// prepare to insert packet to tx queue
+	memcpy(KADDR(tx_queue[tail_idx].buf_addr), buf, buf_len);
+	tx_queue[tail_idx].len = buf_len;
+	tx_queue[tail_idx].cmd = (1 << E1000_TX_CMD_EOP_SHIFT);
+	tx_queue[tail_idx].status &= (1 << E1000_TX_STAT_DD_SHIFT);
+
+	// insert
+	E1000_REG(E1000_TDT) = (tail_idx + 1) % NTDX;
+	return 0;
 }
diff --git a/kern/e1000.h b/kern/e1000.h
index c27adb0..c21274c 100644
--- a/kern/e1000.h
+++ b/kern/e1000.h
@@ -50,9 +50,36 @@
 #define E1000_TCTL_CT_SHIFT       0x04    /* collision threshold shift */
 #define E1000_TCTL_COLD_SHIFT     0x0c    /* collision distance shift  */
 
+/* Transmit Descriptor Status */
+#define E1000_TX_STAT_DD_SHIFT     0x00 /* TX Status DD     */
+#define E1000_TX_STAT_EC_SHIFT     0x01 /* TX Status EC     */
+#define E1000_TX_STAT_LC_SHIFT     0x02 /* TX Status LC     */
+#define E1000_TX_STAT_RSV_RU_SHIFT 0x03 /* TX Status RSV-TU */
+
+/* Transmit Descriptor Command */
+#define E1000_TX_CMD_EOP_SHIFT      0x00 /* TX CMD EOP     */
+#define E1000_TX_CMD_IFCS_SHIFT     0x01 /* TX CMD IFCS    */
+#define E1000_TX_CMD_IC_SHIFT       0x02 /* TX CMD IC      */
+#define E1000_TX_CMD_RS_SHIFT       0x03 /* TX CMD RS      */
+#define E1000_TX_CMD_RSV_RPS_SHIFT  0x04 /* TX CMD RSV_RPC */
+#define E1000_TX_CMD_DEXT_SHIFT     0x05 /* TX CMD DEXT    */
+#define E1000_TX_CMD_VLE_SHIFT      0x06 /* TX CMD VLE     */
+#define E1000_TX_CMD_IDE_SHIFT      0x07 /* TX CMD IDE     */
+
+/* Transmit Descriptor TIPG */
+# define E1000_TIPG_IPGT_MASK        0x000003FF
+# define E1000_TIPG_IPGR1_MASK       0x000FFC00
+# define E1000_TIPG_IPGR2_MASK       0x3FF00000
+
+// Errors
+#define E1000_ERR_IVALID_ARG      1
+#define E1000_ERR_TX_QUEUE_FULL   2
+#define E1000_ERR_TX_PKT_TOO_BIG  3
+
 // Constants
 #define NTDX           64       /* Number of TDESC           */
-#define NTDX_BUF_SIZE  1536     /* Tranmist Buffer Size      */
+#define TDX_BUF_SIZE  1536     /* Tranmist Buffer Size      */
+
 
 // Structures
 // Transmit Descriptor (TDESC) Layout - Legacy Mode
@@ -61,19 +88,20 @@ struct tx_desc {
 	uint16_t len;
 	uint8_t cso;
 	uint8_t cmd;
-	uint8_t status;
+	uint8_t status; // [TU-RSV, LC, EC, DD][Reserved]
 	uint8_t css;
 	uint16_t special;
-}__attribute__((packed)) ;
+} __attribute__((packed));
 
 // Globals vars
 volatile uint8_t *e1000_base;
 struct tx_desc tx_queue[NTDX] __attribute__((aligned(16)));
-uint8_t tx_bufs[NTDX][NTDX_BUF_SIZE];
+uint8_t tx_bufs[NTDX][TDX_BUF_SIZE];
 
 // Function Declartions
 
 int e1000_attach(struct pci_func *);
 static void transmit_init(void);
+static int transmit_packet(uint8_t *buf, uint32_t buf_len);
 
 #endif	// JOS_KERN_E1000_H
-- 
1.9.1

